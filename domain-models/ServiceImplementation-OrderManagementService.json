{"additionalImports": ["java.util.List", "org.springframework.stereotype.Service", "org.springframework.beans.factory.annotation.Autowired", "com.example.demo.entity.Order", "com.example.demo.repository.OrderRepository", "com.example.demo.entity.OrderStatus", "com.example.demo.repository.OrderStatusRepository", "com.example.demo.entity.OrderHistory", "com.example.demo.repository.OrderHistoryRepository", "jakarta.validation.constraints.NotNull", "lombok.Data"], "additionalJPAMethods": {}, "methods": {"createOrder": {"annotations": ["@Service", "@Data", "@Autowired", "@NotNull", "@PostMapping"], "body": "        Order order = Order.builder()\n                .userAccountId(requestBody.getUserAccountId())\n                .investmentTrustId(requestBody.getInvestmentTrustId())\n                .orderType(requestBody.getOrderType())\n                .amount(BigDecimal.valueOf(requestBody.getAmount()))\n                .orderStatus(Status.PENDING)\n                .createdAt(LocalDateTime.now())\n                .build();\n        return orderRepository.save(order);"}, "updateOrderStatus": {"annotations": ["@Service", "@Data", "@Autowired", "@NotNull", "@PutMapping"], "body": "        Order order = orderRepository.findById(id)\n                .orElseThrow(() -> new RuntimeException(\"Order not found\"));\n        order.setOrderStatus(Status.valueOf(requestBody.getStatus()));\n        orderRepository.save(order);\n        OrderStatus orderStatus = OrderStatus.builder()\n                .orderId(id)\n                .status(order.getOrderStatus())\n                .updatedAt(LocalDateTime.now())\n                .build();\n        return orderStatusRepository.save(orderStatus);"}, "getOrderHistory": {"annotations": ["@Service", "@GetMapping"], "body": "        return orderHistoryRepository.findByOrderId(id);"}, "getOrdersByUser": {"annotations": ["@Service", "@GetMapping"], "body": "        return orderRepository.findByUserAccountId(id);"}, "getOrdersByInvestmentTrust": {"annotations": ["@Service", "@GetMapping"], "body": "        return orderRepository.findByInvestmentTrustId(id);"}}}